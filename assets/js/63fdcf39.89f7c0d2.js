"use strict";(self.webpackChunkshevchenki_github_io=self.webpackChunkshevchenki_github_io||[]).push([[1956],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=m(a),c=l,h=u["".concat(s,".").concat(c)]||u[c]||d[c]||r;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:l,o[1]=i;for(var m=2;m<r;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4417:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>m});var n=a(7462),l=(a(7294),a(3905));const r={sidebar_position:4,sidebar_label:"Manifest Control with Helm and Kustomize"},o="Manifest Control",i={unversionedId:"tools-tips/manifest-control",id:"tools-tips/manifest-control",title:"Manifest Control",description:"In deploy-sample, we created 2 sample manifests. However, we need to use some tools to deploy the manifest to a K8S environment. We can use HELM or KUSTOMIZE, and in this post, we will explore both.",source:"@site/docs/tools-tips/04.manifest-control.md",sourceDirName:"tools-tips",slug:"/tools-tips/manifest-control",permalink:"/docs/tools-tips/manifest-control",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tools-tips/04.manifest-control.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Manifest Control with Helm and Kustomize"},sidebar:"tutorialSidebar",previous:{title:"Create translate bot with Slack & DeepL - (Comming soon)",permalink:"/docs/tools-tips/create-tranlate-bot"}},s={},m=[{value:"I. Using helm to deploy vote-dog-cat (sample container)",id:"i-using-helm-to-deploy-vote-dog-cat-sample-container",level:2},{value:"1. Install helm",id:"1-install-helm",level:3},{value:"2. Create a helm chart",id:"2-create-a-helm-chart",level:3},{value:"3. Customize the template",id:"3-customize-the-template",level:3},{value:"4. Use helm commands",id:"4-use-helm-commands",level:3},{value:"5. Distributing Helm Charts",id:"5-distributing-helm-charts",level:3},{value:"II. Use kustomize to deploy vote-dog-cat (sample container)",id:"ii-use-kustomize-to-deploy-vote-dog-cat-sample-container",level:2},{value:"1. Install kustomize",id:"1-install-kustomize",level:3},{value:"2. Create kustomize template",id:"2-create-kustomize-template",level:3},{value:"Deploy manifest use kustomize",id:"deploy-manifest-use-kustomize",level:3},{value:"III. Advantages and Disadvantages between Helm and Kustomize",id:"iii-advantages-and-disadvantages-between-helm-and-kustomize",level:2}],p={toc:m},u="wrapper";function d(e){let{components:t,...a}=e;return(0,l.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"manifest-control"},"Manifest Control"),(0,l.kt)("p",null,"In ",(0,l.kt)("a",{parentName:"p",href:"/docs/kubernetes-workshop/deploy-sample"},"deploy-sample"),", we created 2 sample manifests. However, we need to use some tools to deploy the manifest to a K8S environment. We can use HELM or KUSTOMIZE, and in this post, we will explore both."),(0,l.kt)("h2",{id:"i-using-helm-to-deploy-vote-dog-cat-sample-container"},"I. Using helm to deploy vote-dog-cat (sample container)"),(0,l.kt)("h3",{id:"1-install-helm"},"1. Install helm"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"brew install helm\nhelm help\n")),(0,l.kt)("h3",{id:"2-create-a-helm-chart"},"2. Create a helm chart"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm create vote-dog-cat-api\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Confirm setting")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"tree ./vote-dog-cat-api\nvote-dog-cat-api/\n\u251c\u2500\u2500 charts\n\u251c\u2500\u2500 Chart.yaml\n\u251c\u2500\u2500 templates\n\u2502   \u251c\u2500\u2500 deployment.yaml\n\u2502   \u251c\u2500\u2500 _helpers.tpl\n\u2502   \u251c\u2500\u2500 hpa.yaml\n\u2502   \u251c\u2500\u2500 ingress.yaml\n\u2502   \u251c\u2500\u2500 NOTES.txt\n\u2502   \u251c\u2500\u2500 serviceaccount.yaml\n\u2502   \u251c\u2500\u2500 service.yaml\n\u2502   \u2514\u2500\u2500 tests\n\u2502       \u2514\u2500\u2500 test-connection.yaml\n\u2514\u2500\u2500 values.yaml\n")),(0,l.kt)("h3",{id:"3-customize-the-template"},"3. Customize the template"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"When we use helm, the templates folder will use input values from ",(0,l.kt)("inlineCode",{parentName:"p"},"value.yaml"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"We define it as",(0,l.kt)("inlineCode",{parentName:"p"},"{{ .Release.Name }}"),", and we can create a ",(0,l.kt)("inlineCode",{parentName:"p"},"values.yaml")," like the following:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"backend:\n  name: dynamodb\n  replicas: 1\n  image: \n      repo: amazon/dynamodb-local\n      pullPolicy: IfNotPresent\n      port: 8000\n  service:\n      type: ClusterIP\n      port: 8000\n\nfrontend:\n  name: frontend\n  replicas: 1\n  image: \n      repo: duynamvnn1208/appserver:latest\n      pullPolicy: Always\n      port: 80\n  service:\n      type: NodePort\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"You can also refer to this ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/shevchenki/Kubenetes-Workshop/tree/master/3.1_HELM/vote-dog-cat-api"},"GitHub")," for more detailed information."))),(0,l.kt)("h3",{id:"4-use-helm-commands"},"4. Use helm commands"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"You can refer to helm commands in ",(0,l.kt)("a",{parentName:"li",href:"https://helm.sh/docs/helm/helm/"},"this website"),", but I find the following commands more user-friendly:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Role"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"helm lint"),(0,l.kt)("td",{parentName:"tr",align:null},"Check lint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"helm template"),(0,l.kt)("td",{parentName:"tr",align:null},"Validate template")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"helm install"),(0,l.kt)("td",{parentName:"tr",align:null},"Release template")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"helm uninstall"),(0,l.kt)("td",{parentName:"tr",align:null},"Uninstall template")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"helm ls"),(0,l.kt)("td",{parentName:"tr",align:null},"Get local/remote chart")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"helm upgrade"),(0,l.kt)("td",{parentName:"tr",align:null},"Upgrade template")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"helm rollback"),(0,l.kt)("td",{parentName:"tr",align:null},"Rollback to specified version")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"helm delete"),(0,l.kt)("td",{parentName:"tr",align:null},"Delete helm chart")))),(0,l.kt)("h3",{id:"5-distributing-helm-charts"},"5. Distributing Helm Charts"),(0,l.kt)("p",null,"After developing a helm chart, we can package the source code and add it to Github."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Helm Package"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm package ./vote-dog-cat-api\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Helm Repo"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo index my-repo/ --url https://<username>.github.io/my-repo\nhelm repo add my-repo https://my-pages.github.io/my-repo\nhelm install my-repo/vote-dog-cat-api --name=vote-dog-cat-api\n")))),(0,l.kt)("h2",{id:"ii-use-kustomize-to-deploy-vote-dog-cat-sample-container"},"II. Use kustomize to deploy vote-dog-cat (sample container)"),(0,l.kt)("h3",{id:"1-install-kustomize"},"1. Install kustomize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"brew install kustomize\n")),(0,l.kt)("h3",{id:"2-create-kustomize-template"},"2. Create kustomize template"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"You can refer this ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/shevchenki/Kubenetes-Workshop/tree/master/3.2_Kustomize"},"GitHub")," for more detailed information.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"tree .\n.\n\u251c\u2500\u2500 base\n\u2502   \u251c\u2500\u2500 deployment.yaml\n\u2502   \u251c\u2500\u2500 gateway.yaml\n\u2502   \u251c\u2500\u2500 kustomization.yaml\n\u2502   \u251c\u2500\u2500 namespace.yaml\n\u2502   \u2514\u2500\u2500 service.yaml\n\u2514\u2500\u2500 overlays\n    \u251c\u2500\u2500 kustomization.yaml\n    \u2514\u2500\u2500 replica-and-rollout-strategy.yaml\n")),(0,l.kt)("h3",{id:"deploy-manifest-use-kustomize"},"Deploy manifest use kustomize"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Confirm the deploy content"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"cd overlays\nkustomize build .\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Deploy"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -k .\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Destroy")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete -k .\n")),(0,l.kt)("h2",{id:"iii-advantages-and-disadvantages-between-helm-and-kustomize"},"III. Advantages and Disadvantages between Helm and Kustomize"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Regarding Helm, we should use it to deploy OSS tools like ArgoCD, Keda, etc. because we only need to focus on the function of these applications. We don't want to control these manifests. When we upgrade the version of OSS, if we don't use Helm, we have to check all differences between the two versions, but we may not understand them because we are not the OSS developers."),(0,l.kt)("li",{parentName:"ul"},"Regarding Kustomize, we should use it to control our templates because it's easier to write and read than Helm. Kustomize allows us to modify, extend, and patch Kubernetes YAML files without changing the original files, which can be especially useful for managing configuration files across multiple environments.")))}d.isMDXComponent=!0}}]);