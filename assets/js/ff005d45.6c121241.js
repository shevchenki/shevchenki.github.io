"use strict";(self.webpackChunkshevchenki_github_io=self.webpackChunkshevchenki_github_io||[]).push([[6087],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),i=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=i(a),g=n,d=m["".concat(l,".").concat(g)]||m[g]||u[g]||s;return a?r.createElement(d,o(o({ref:t},c),{},{components:a})):r.createElement(d,o({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=g;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:n,o[1]=p;for(var i=2;i<s;i++)o[i]=a[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},7165:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>i});var r=a(7462),n=(a(7294),a(3905));const s={sidebar_position:4,sidebar_label:"4. Progressive Delivery With Argo Rollouts"},o="Progressive Delivery With Argo Rollouts",p={unversionedId:"kubernetes-workshop/blue-green",id:"kubernetes-workshop/blue-green",title:"Progressive Delivery With Argo Rollouts",description:"- We can cofirm the application before releasing to the endusers",source:"@site/docs/kubernetes-workshop/04.blue-green.md",sourceDirName:"kubernetes-workshop",slug:"/kubernetes-workshop/blue-green",permalink:"/docs/kubernetes-workshop/blue-green",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/kubernetes-workshop/04.blue-green.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"4. Progressive Delivery With Argo Rollouts"},sidebar:"tutorialSidebar",previous:{title:"3. Deploy A Container Sample",permalink:"/docs/kubernetes-workshop/deploy-sample"},next:{title:"5. Using Service Mesh - Istio - (Comming soon)",permalink:"/docs/kubernetes-workshop/service-mesh"}},l={},i=[{value:"I. Install Argo Rollouts",id:"i-install-argo-rollouts",level:2},{value:"II. Create Rollout based on BlueGreen Deployment Strategy",id:"ii-create-rollout-based-on-bluegreen-deployment-strategy",level:2},{value:"1. Prepare the manifest -&gt; source-code",id:"1-prepare-the-manifest---source-code",level:3},{value:"2. Deploy vote-dog-cat-bg use ArgoCD",id:"2-deploy-vote-dog-cat-bg-use-argocd",level:3},{value:"3. Release new version -&gt; this PR",id:"3-release-new-version---this-pr",level:3},{value:"4. Sync ArgoCD and confirm",id:"4-sync-argocd-and-confirm",level:3},{value:"5. Promote new version with Argo-Rollout",id:"5-promote-new-version-with-argo-rollout",level:3}],c={toc:i},m="wrapper";function u(e){let{components:t,...s}=e;return(0,n.kt)(m,(0,r.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"progressive-delivery-with-argo-rollouts"},"Progressive Delivery With Argo Rollouts"),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(7360).Z,width:"2716",height:"688"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We can cofirm the application before releasing to the endusers"),(0,n.kt)("li",{parentName:"ul"},"We can use Canary Deploy to mesurance User-Exprience")),(0,n.kt)("h2",{id:"i-install-argo-rollouts"},"I. Install ",(0,n.kt)("a",{parentName:"h2",href:"https://argoproj.github.io/argo-rollouts/"},"Argo Rollouts")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Quick Start"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl create namespace argo-rollouts\nkubectl delete namespace argocd\nkubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Confirm running"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"k get pods -n argo-rollouts\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Install kubectl-argo-rollouts on ",(0,n.kt)("strong",{parentName:"p"},"bastion-host")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"brew install argoproj/tap/kubectl-argo-rollouts\n")))),(0,n.kt)("h2",{id:"ii-create-rollout-based-on-bluegreen-deployment-strategy"},"II. Create Rollout based on ",(0,n.kt)("a",{parentName:"h2",href:"https://argoproj.github.io/argo-rollouts/features/bluegreen/"},"BlueGreen Deployment Strategy")),(0,n.kt)("h3",{id:"1-prepare-the-manifest---source-code"},"1. Prepare the manifest -> ",(0,n.kt)("a",{parentName:"h3",href:"https://github.com/shevchenki/kubernetes-workshop/tree/master/3.service-manifest/blue-green/vote-dog-cat/base"},"source-code")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Convert ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/shevchenki/kubernetes-workshop/blob/master/3.service-manifest/vote-dog-cat/base/deployment.yaml#L26-L51"},"Deployment")," to Rollout"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'---\napiVersion: argoproj.io/v1alpha1\nkind: Rollout\nmetadata:\n  name: appserver\n  namespace: vote-dog-cat-bg\nspec:\n  replicas: 1\n  revisionHistoryLimit: 2\n  selector:\n    matchLabels:\n      app: appserver\n  template:\n    metadata:\n      labels:\n        app: appserver\n    spec:\n      containers:\n      - name: appserver\n        image: duynamvnn1208/appserver:v1\n        imagePullPolicy: Always\n        resources:\n          limits:\n            memory: "128Mi"\n            cpu: "100m"\n        ports:\n        - containerPort: 8080\n      restartPolicy: Always\n  strategy:\n    blueGreen: \n      activeService: appserver-active\n      previewService: appserver-preview\n      autoPromotionEnabled: false\n'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Change appserver serivce with 2 options (active/preview)"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: appserver\n  name: appserver-active\n  namespace: vote-dog-cat-bg\nspec:\n  type: NodePort\n  selector:\n    app: appserver\n  ports:\n  - protocol: TCP\n    port: 8080\n    targetPort: 8080\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: appserver\n  name: appserver-preview\n  namespace: vote-dog-cat-bg\nspec:\n  type: NodePort\n  selector:\n    app: appserver\n  ports:\n  - protocol: TCP\n    port: 8081\n    targetPort: 8080\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Change Ingress use alb.ingress.kubernetes.io/group.name"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: appserver-active\n  namespace: vote-dog-cat-bg\n  annotations:\n    kubernetes.io/ingress.class: alb\n    alb.ingress.kubernetes.io/group.name: appserver\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/target-type: ip\n    alb.ingress.kubernetes.io/security-groups: sandbox_alb_backend\n    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}]'\n  labels:\n    app: appserver-active\nspec:\n  rules:\n    - http:\n        paths:\n          - path: /*\n            pathType: ImplementationSpecific\n            backend:\n              service:\n                name: appserver-active\n                port:\n                  number: 8080\n\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: appserver-preview\n  namespace: vote-dog-cat-bg\n  annotations:\n    kubernetes.io/ingress.class: alb\n    alb.ingress.kubernetes.io/group.name: appserver\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/target-type: ip\n    alb.ingress.kubernetes.io/security-groups: sandbox_alb_backend\n    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 8080}]'\n  labels:\n    app: appserver-preview\nspec:\n  rules:\n    - http:\n        paths:\n          - path: /*\n            pathType: ImplementationSpecific\n            backend:\n              service:\n                name: appserver-preview\n                port:\n                  number: 8081\n")))),(0,n.kt)("h3",{id:"2-deploy-vote-dog-cat-bg-use-argocd"},"2. Deploy vote-dog-cat-bg use ArgoCD"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Deploy vote-dog-cat-bg use ArgoCD\n",(0,n.kt)("img",{src:a(8553).Z,width:"3980",height:"2492"})),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("img",{src:a(9757).Z,width:"4634",height:"2292"}),"\n",(0,n.kt)("img",{src:a(7009).Z,width:"3184",height:"534"}))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Confirm result"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Ingress",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"$ k get ingress -n vote-dog-cat-bg\nNAME                CLASS    HOSTS   ADDRESS                                                                PORTS   AGE\nappserver-active    <none>   *       k8s-appserver-95b9d69271-1099680571.ap-northeast-1.elb.amazonaws.com   80      116s\nappserver-preview   <none>   *       k8s-appserver-95b9d69271-1099680571.ap-northeast-1.elb.amazonaws.com   80      116s\n"))),(0,n.kt)("li",{parentName:"ul"},"Call active endpoint",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl http://k8s-appserver-95b9d69271-1099680571.ap-northeast-1.elb.amazonaws.com\n{"result":"OK","data":{"Item":{"dog":0,"vote_item":1,"cat":0}},"message":"This is appserver 01"}%               \n'))),(0,n.kt)("li",{parentName:"ul"},"Call preview endpoint",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl http://k8s-appserver-95b9d69271-1099680571.ap-northeast-1.elb.amazonaws.com:8080/\n{"result":"OK","data":{"Item":{"dog":0,"vote_item":1,"cat":0}},"message":"This is appserver 01"}%\n'))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Confirm rollout status by command"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"$ kubectl argo rollouts get rollout -n vote-dog-cat-bg appserver --watch\nName:            appserver\nNamespace:       vote-dog-cat-bg\nStatus:          \u2714 Healthy\nStrategy:        BlueGreen\nImages:          duynamvnn1208/appserver:v1 (stable, active)\nReplicas:\n  Desired:       1\n  Current:       1\n  Updated:       1\n  Ready:         1\n  Available:     1\n\nNAME                                   KIND        STATUS     AGE   INFO\n\u27f3 appserver                            Rollout     \u2714 Healthy  6m8s  \n\u2514\u2500\u2500# revision:1                                                     \n  \u2514\u2500\u2500\u29c9 appserver-576fc9cf47           ReplicaSet  \u2714 Healthy  6m8s  stable,active\n      \u2514\u2500\u2500\u25a1 appserver-576fc9cf47-wfp9r  Pod         \u2714 Running  6m8s  ready:1/1\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Confirm rollout status by dashboard"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"$ kubectl argo rollouts -n vote-dog-cat-bg dashboard\n\nINFO[0000] Argo Rollouts Dashboard is now available at http://localhost:3100/rollouts\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("img",{src:a(1304).Z,width:"3480",height:"2080"})))),(0,n.kt)("h3",{id:"3-release-new-version---this-pr"},"3. Release new version -> ",(0,n.kt)("a",{parentName:"h3",href:"https://github.com/shevchenki/kubernetes-workshop/pull/1"},"this PR")),(0,n.kt)("h3",{id:"4-sync-argocd-and-confirm"},"4. Sync ArgoCD and confirm"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Sync in ArgoCD\n",(0,n.kt)("img",{src:a(9337).Z,width:"4638",height:"2560"}))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Confirm active endpoint"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl http://k8s-appserver-95b9d69271-1099680571.ap-northeast-1.elb.amazonaws.com\n{"result":"OK","data":{"Item":{"dog":0,"vote_item":1,"cat":0}},"message":"This is appserver 01"}%               \n'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Confirm preview endpoint"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl http://k8s-appserver-95b9d69271-1099680571.ap-northeast-1.elb.amazonaws.com:8080/\n{"result":"OK","data":{"Item":{"dog":0,"vote_item":1,"cat":0}},"message":"This is appserver 02"}%\n')),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"New version was reflect in preview endpoint")))),(0,n.kt)("h3",{id:"5-promote-new-version-with-argo-rollout"},"5. Promote new version with Argo-Rollout"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Promote new version with Argo-Rollout\n",(0,n.kt)("img",{src:a(8897).Z,width:"3484",height:"2248"})),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"kubectl argo rollouts get rollout -n vote-dog-cat-bg appserver --watch\nName:            appserver\nNamespace:       vote-dog-cat-bg\nStatus:          \u2714 Healthy\nStrategy:        BlueGreen\nImages:          duynamvnn1208/appserver:v2 (stable, active)\nReplicas:\n  Desired:       1\n  Current:       1\n  Updated:       1\n  Ready:         1\n  Available:     1\n\nNAME                                   KIND        STATUS         AGE    INFO\n\u27f3 appserver                            Rollout     \u2714 Healthy      17m    \n\u251c\u2500\u2500# revision:2                                                          \n\u2502  \u2514\u2500\u2500\u29c9 appserver-774889c5fd           ReplicaSet  \u2714 Healthy      5m58s  stable,active\n\u2502     \u2514\u2500\u2500\u25a1 appserver-774889c5fd-qzffg  Pod         \u2714 Running      5m58s  ready:1/1\n\u2514\u2500\u2500# revision:1                                                          \n  \u2514\u2500\u2500\u29c9 appserver-576fc9cf47           ReplicaSet  \u2022 ScaledDown   17m    \n      \u2514\u2500\u2500\u25a1 appserver-576fc9cf47-wfp9r  Pod         \u25cc Terminating  17m    ready:1/1\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Confirm active endpoint"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl http://k8s-appserver-95b9d69271-1099680571.ap-northeast-1.elb.amazonaws.com\n{"result":"OK","data":{"Item":{"dog":0,"vote_item":1,"cat":0}},"message":"This is appserver 02"}%               \n'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Confirm preview endpoint"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl http://k8s-appserver-95b9d69271-1099680571.ap-northeast-1.elb.amazonaws.com:8080/\n{"result":"OK","data":{"Item":{"dog":0,"vote_item":1,"cat":0}},"message":"This is appserver 02"}%\n'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Confirm ArgoCD status\n",(0,n.kt)("img",{src:a(1684).Z,width:"4630",height:"2548"})))))}u.isMDXComponent=!0},7360:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/Argo-Rollouts-6e9efdf4430d5b5992455d8cf8b7cad7.png"},1684:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/confirm-argocd-db538be32f566128de5743b20c94fa3a.png"},1304:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/confirm-roll-out-a2053350763aed1df7b621ed48b4b5fd.png"},8553:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/create-vote-dog-cat-bg-cd0b9fdde428e63f7433d354403c78c7.png"},8897:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/promote-roll-out-29680accd8c59b8007316cd00134b226.png"},9337:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/sync-argocd-ed48de4764be10081945b6c7e9fb5b58.png"},9757:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/vote-dog-cat-bg-1-2ac60cb51b3a42721f94828ca4527d1c.png"},7009:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/vote-dog-cat-bg-2-e7450d5e66a186f8fe645bd3b185032b.png"}}]);