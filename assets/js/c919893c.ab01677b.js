"use strict";(self.webpackChunkshevchenki_github_io=self.webpackChunkshevchenki_github_io||[]).push([[2052],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var l=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,l,r=function(e,t){if(null==e)return{};var a,l,r={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=l.createContext({}),c=function(e){var t=l.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return l.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(a),d=r,k=p["".concat(i,".").concat(d)]||p[d]||m[d]||n;return a?l.createElement(k,o(o({ref:t},u),{},{components:a})):l.createElement(k,o({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,o=new Array(n);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<n;c++)o[c]=a[c];return l.createElement.apply(null,o)}return l.createElement.apply(null,a)}d.displayName="MDXCreateElement"},294:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var l=a(7462),r=(a(7294),a(3905));const n={sidebar_position:1,sidebar_label:"Deploy EKS cluster"},o="Deploy EKS cluster",s={unversionedId:"kubernetes-workshop/deploy-eks-cluster",id:"kubernetes-workshop/deploy-eks-cluster",title:"Deploy EKS cluster",description:"I. Preparation",source:"@site/docs/kubernetes-workshop/01.deploy-eks-cluster.md",sourceDirName:"kubernetes-workshop",slug:"/kubernetes-workshop/deploy-eks-cluster",permalink:"/docs/kubernetes-workshop/deploy-eks-cluster",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/kubernetes-workshop/01.deploy-eks-cluster.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Deploy EKS cluster"},sidebar:"tutorialSidebar",previous:{title:"Kubernetes - Workshop",permalink:"/docs/category/kubernetes---workshop"},next:{title:"Deploy Container Sample",permalink:"/docs/kubernetes-workshop/deploy-sample"}},i={},c=[{value:"I. Preparation",id:"i-preparation",level:2},{value:"1. Notes:",id:"1-notes",level:3},{value:"2. Environment",id:"2-environment",level:3},{value:"II. Create EKS Cluster",id:"ii-create-eks-cluster",level:2},{value:"1. Create EKS Cluster with AWS Cloudformation",id:"1-create-eks-cluster-with-aws-cloudformation",level:3},{value:"2. Setting kubectl config",id:"2-setting-kubectl-config",level:3},{value:"III. Deployment of Cluster Autoscaler",id:"iii-deployment-of-cluster-autoscaler",level:2},{value:"1. Description",id:"1-description",level:3},{value:"2. Download sample deployment files",id:"2-download-sample-deployment-files",level:3},{value:"3. Change EKS cluster name (eks-cluster) and environment variables in cluster-autoscaler-autodiscover.yaml",id:"3-change-eks-cluster-name-eks-cluster-and-environment-variables-in-cluster-autoscaler-autodiscoveryaml",level:3},{value:"4. Deploy Cluster Autoscaler",id:"4-deploy-cluster-autoscaler",level:3},{value:"5. Check the Cluster Autoscaler deployment logs if deployment errors",id:"5-check-the-cluster-autoscaler-deployment-logs-if-deployment-errors",level:3},{value:"IV. Deploy Application Load Balancer Ingress",id:"iv-deploy-application-load-balancer-ingress",level:2},{value:"1. Create IAM OIDC provider and integrate to eks cluster",id:"1-create-iam-oidc-provider-and-integrate-to-eks-cluster",level:3},{value:"2. Create ALBIngressControllerIAMPolicy",id:"2-create-albingresscontrolleriampolicy",level:3},{value:"3. Create IAM ROLE for ALB Ingress Controller",id:"3-create-iam-role-for-alb-ingress-controller",level:3},{value:"3.1 Create assume-role-policy-document.json",id:"31-create-assume-role-policy-documentjson",level:4},{value:"3.2 Create Role by AWS CLI",id:"32-create-role-by-aws-cli",level:4},{value:"3.3 Applying role policy (using policy-arn above)",id:"33-applying-role-policy-using-policy-arn-above",level:4},{value:"4. Create a Kubernetes Service Account for alb-ingress-controller",id:"4-create-a-kubernetes-service-account-for-alb-ingress-controller",level:3},{value:"5. Deploy ALB Ingress Controller.",id:"5-deploy-alb-ingress-controller",level:3},{value:"V. Create ECR Repository",id:"v-create-ecr-repository",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,l.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploy-eks-cluster"},"Deploy EKS cluster"),(0,r.kt)("h2",{id:"i-preparation"},"I. Preparation"),(0,r.kt)("h3",{id:"1-notes"},"1. Notes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Please switch ","[aws account id]"," with your account id.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Overall configuration diagram:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Network configuration\n",(0,r.kt)("img",{src:a(7781).Z,width:"884",height:"477"}))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Cluster configuration\n",(0,r.kt)("img",{src:a(7601).Z,width:"802",height:"449"}))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Source code: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/shevchenki/Kubenetes-Workshop/tree/master/clouformation-template"},"GIT-HUB"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Deployment scope:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"EKS Cluster."),(0,r.kt)("li",{parentName:"ul"},"EKS Worker Node: AutoScaler configuration."),(0,r.kt)("li",{parentName:"ul"},"AWS Application LoadBalancer for Ingress."),(0,r.kt)("li",{parentName:"ul"},"ECR")))),(0,r.kt)("h3",{id:"2-environment"},"2. Environment"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Amazon Linux"),(0,r.kt)("li",{parentName:"ul"},"AWS CLI Version: 2.0.8"),(0,r.kt)("li",{parentName:"ul"},"Install eksctl on Linux",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp\nsudo mv /tmp/eksctl /usr/local/bin\neksctl version\n')))),(0,r.kt)("h2",{id:"ii-create-eks-cluster"},"II. Create EKS Cluster"),(0,r.kt)("h3",{id:"1-create-eks-cluster-with-aws-cloudformation"},"1. Create EKS Cluster with AWS Cloudformation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create resources based on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/shevchenki/Kubenetes-Workshop/blob/master/clouformation-template/1_eks-vpc.yaml"},"1_eks_vpc.yaml")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/shevchenki/Kubenetes-Workshop/blob/master/clouformation-template/2_eks-nodegroup.yaml"},"2_eks-nodegroup.yaml"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Confirmation of results:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'aws eks describe-cluster --name sandbox_eks_cluster --query cluster.status\n> "ACTIVE"\n')))),(0,r.kt)("h3",{id:"2-setting-kubectl-config"},"2. Setting kubectl config"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Setting kubectl config:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"aws eks update-kubeconfig --kubeconfig ~/.kube/config-eks --name sandbox_eks_cluster\nexport KUBECONFIG=~/.kube/config-eks\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Confirm operation (Get service information):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get svc\n>\n> NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\n> kubernetes   ClusterIP   172.20.0.1   <none>        443/TCP   14m\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Get node information:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get nodes\n> NAME                                           STATUS   ROLES    AGE   VERSION\n> ip-10-0-3-61.ap-northeast-1.compute.internal   Ready    <none>   10m   v1.24.11-eks-a59e1f0\n")))),(0,r.kt)("h2",{id:"iii-deployment-of-cluster-autoscaler"},"III. Deployment of Cluster Autoscaler"),(0,r.kt)("h3",{id:"1-description"},"1. Description"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Cluster Autoscaler is a tool that automatically adjusts the size of a Kubernetes cluster when any of the following conditions are met.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"There are pods in the cluster that have failed to run due to lack of resources."),(0,r.kt)("li",{parentName:"ul"},"There are nodes in the cluster that have not been used for a long time and those pods can be placed on other existing nodes."))),(0,r.kt)("li",{parentName:"ul"},"AWS Cluster Autoscaler extends worker nodes in any given Auto Scaling group and runs as a deployment within the cluster.")),(0,r.kt)("h3",{id:"2-download-sample-deployment-files"},"2. Download sample deployment files"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://raw.githubusercontent.com/kubernetes/autoscaler/master/cluster-autoscaler/cloudprovider/aws/examples/cluster-autoscaler-autodiscover.yaml\n")),(0,r.kt)("h3",{id:"3-change-eks-cluster-name-eks-cluster-and-environment-variables-in-cluster-autoscaler-autodiscoveryaml"},"3. Change EKS cluster name (eks-cluster) and environment variables in cluster-autoscaler-autodiscover.yaml"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"    ...          \n        command:\n        - ./cluster-autoscaler\n        - --v=4\n        - --stderrthreshold=info\n        - --cloud-provider=aws\n        - --skip-nodes-with-local-storage=false\n        - --expander=least-waste\n        - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/[eks-cluster-name]\n    ...\n")),(0,r.kt)("h3",{id:"4-deploy-cluster-autoscaler"},"4. Deploy Cluster Autoscaler"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f cluster-autoscaler-autodiscover.yaml\n")),(0,r.kt)("h3",{id:"5-check-the-cluster-autoscaler-deployment-logs-if-deployment-errors"},"5. Check the Cluster Autoscaler deployment logs if deployment errors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl logs -f deployment/cluster-autoscaler -n kube-system\n")),(0,r.kt)("h2",{id:"iv-deploy-application-load-balancer-ingress"},"IV. Deploy Application Load Balancer Ingress"),(0,r.kt)("h3",{id:"1-create-iam-oidc-provider-and-integrate-to-eks-cluster"},"1. Create IAM OIDC provider and integrate to eks cluster"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'aws eks describe-cluster --name sandbox_eks_cluster --query "cluster.identity.oidc.issuer" --output text\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Note the oidc output "oidc.eks.',"[aws region]",'.amazonaws.com/id/F376C***"',(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://oidc.eks.ap-northeast-1.amazonaws.com/id/8B5F0"},"https://oidc.eks.ap-northeast-1.amazonaws.com/id/8B5F0"),(0,r.kt)("strong",{parentName:"p"},"****"))))),(0,r.kt)("h3",{id:"2-create-albingresscontrolleriampolicy"},"2. Create ALBIngressControllerIAMPolicy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Refer: ",(0,r.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/ja_jp/eks/latest/userguide/aws-load-balancer-controller.html"},"https://docs.aws.amazon.com/ja_jp/eks/latest/userguide/aws-load-balancer-controller.html"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.7/docs/install/iam_policy.json\n\naws iam create-policy \\\n    --policy-name ALBIngressControllerIAMPolicy \\\n    --policy-document file://iam_policy.json\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Note policy-arn "arn:aws:iam::',"[aws account id]",':policy/ALBIngressControllerIAMPolicy".',(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"arn:aws:iam::","[account-id]",":policy/ALBIngressControllerIAMPolicy")))),(0,r.kt)("h3",{id:"3-create-iam-role-for-alb-ingress-controller"},"3. Create IAM ROLE for ALB Ingress Controller"),(0,r.kt)("h4",{id:"31-create-assume-role-policy-documentjson"},"3.1 Create assume-role-policy-document.json"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Switch between "Federated" and "StringEquals" in the above oidc output',(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n"Version": "2012-10-17",\n"Statement": [\n    {\n    "Effect": "Allow",\n    "Principal": {\n        "Federated": "arn:aws:iam::[aws account id]:oidc-provider/oidc.eks.ap-northeast-1.amazonaws.com/id/8B5F0********"\n    },\n    "Action": "sts:AssumeRoleWithWebIdentity",\n    "Condition": {\n        "StringEquals": {\n        "oidc.eks.ap-northeast-1.amazonaws.com/id/8B5F0********:aud": "sts.amazonaws.com"\n        }\n    }\n    }\n]\n}\n')))),(0,r.kt)("h4",{id:"32-create-role-by-aws-cli"},"3.2 Create Role by AWS CLI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"aws iam create-role \\\n    --role-name eks-alb-ingress-controller \\\n    --assume-role-policy-document file://assume-role-policy-document.json\n")),(0,r.kt)("h4",{id:"33-applying-role-policy-using-policy-arn-above"},"3.3 Applying role policy (using policy-arn above)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"aws iam attach-role-policy --policy-arn arn:aws:iam::[account-id]:policy/ALBIngressControllerIAMPolicy --role-name eks-alb-ingress-controller\n")),(0,r.kt)("h3",{id:"4-create-a-kubernetes-service-account-for-alb-ingress-controller"},"4. Create a Kubernetes Service Account for alb-ingress-controller"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cat >aws-load-balancer-controller-service-account.yaml <<EOF\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/name: aws-load-balancer-controller\n  name: aws-load-balancer-controller\n  namespace: kube-system\n  annotations:\n    eks.amazonaws.com/role-arn: arn:aws:iam::[account-id]:role/eks-alb-ingress-controller\nEOF\n\nkubectl apply -f aws-load-balancer-controller-service-account.yaml\n")),(0,r.kt)("h3",{id:"5-deploy-alb-ingress-controller"},"5. Deploy ALB Ingress Controller."),(0,r.kt)("p",null,"Install cert-manager using one of the following methods to inject certificate configuration into the webhooks."),(0,r.kt)("p",null,"If your nodes have access to the quay.io container registry, install cert-manager to inject certificate configuration into the webhooks."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply \\\n    --validate=false \\\n    -f https://github.com/jetstack/cert-manager/releases/download/v1.5.4/cert-manager.yaml\n")),(0,r.kt)("p",null,"Deploy ALB Ingress Controller."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.4/docs/examples/alb-ingress-controller.yaml > alb-ingress-controller.yaml\n\ncurl -Lo v2_4_7_full.yaml https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.4.7/v2_4_7_full.yaml\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Add information to alb-ingress-controller.yaml (vpc, region, eks name)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  containers:\n  - args:\n    - --ingress-class=alb\n    - --cluster-name=[eks-cluster-name]\n    - --aws-vpc-id=[vpc id]\n    - --aws-region=[aws region]\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Deploy ALB Ingress Controller:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f alb-ingress-controller.yaml\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Verify that the controller is installed.\nkubectl get deployment -n kube-system aws-load-balancer-controller"))),(0,r.kt)("h2",{id:"v-create-ecr-repository"},"V. Create ECR Repository"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Repository Name: sandbox/service01")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Get created output and login: "))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"aws ecr get-login-password --region [aws region] | docker login --username AWS --password-stdin [aws account id].dkr.ecr.[aws region].amazonaws.com/eks-repository/frontend\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Build image from docker file:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker build -t eks-repository/frontend .\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add Tag:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker tag eks-repository/frontend:latest [aws account id].dkr.ecr.[aws region].amazonaws.com/eks-repository/frontend:latest\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Push image to ECR:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker push [aws account id].dkr.ecr.[aws region].amazonaws.com/eks-repository/frontend:latest\n")))}m.isMDXComponent=!0},7601:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/EksCluster-5d1385b803e394860eb501f6c1bf2721.svg"},7781:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/Network-b16ca39546f2b463b7a048d2260edd60.svg"}}]);